<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MainDBDataSet" targetNamespace="http://tempuri.org/MainDBDataSet.xsd" xmlns:mstns="http://tempuri.org/MainDBDataSet.xsd" xmlns="http://tempuri.org/MainDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MainDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MainDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DataManger.Properties.Settings.GlobalReference.Default.MainDBConnectionString" Provider="System.Data.SQLite.EF6" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AntonymsTableAdapter" GeneratorDataComponentClassName="AntonymsTableAdapter" Name="Antonyms" UserDataComponentName="AntonymsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MainDBConnectionString (Settings)" DbObjectName="main.Antonyms" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [main].[sqlite_default_schema].[Antonyms] WHERE (([ID] = @Original_ID) AND ([Antonym] = @Original_Antonym) AND ([Meaning_ID] = @Original_Meaning_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Antonym" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Antonym" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Meaning_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [main].[sqlite_default_schema].[Antonyms] ([ID], [Antonym], [Meaning_ID]) VALUES (@ID, @Antonym, @Meaning_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Antonym" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Antonym" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Meaning_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [ID], [Antonym], [Meaning_ID] FROM [Antonyms]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [main].[sqlite_default_schema].[Antonyms] SET [ID] = @ID, [Antonym] = @Antonym, [Meaning_ID] = @Meaning_ID WHERE (([ID] = @Original_ID) AND ([Antonym] = @Original_Antonym) AND ([Meaning_ID] = @Original_Meaning_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Antonym" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Antonym" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Meaning_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Antonym" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Antonym" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Meaning_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Antonym" DataSetColumn="Antonym" />
              <Mapping SourceColumn="Meaning_ID" DataSetColumn="Meaning_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MeaningsTableAdapter" GeneratorDataComponentClassName="MeaningsTableAdapter" Name="Meanings" UserDataComponentName="MeaningsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MainDBConnectionString (Settings)" DbObjectName="main.Meanings" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [main].[sqlite_default_schema].[Meanings] WHERE (([ID] = @Original_ID) AND ([Word_ID] = @Original_Word_ID) AND ([PoS_ID] = @Original_PoS_ID) AND ([Meaning] = @Original_Meaning) AND ((@IsNull_Usage = 1 AND [Usage] IS NULL) OR ([Usage] = @Original_Usage)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Word_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Word_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_PoS_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="PoS_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Meaning" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Usage" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Usage" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Usage" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Usage" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [main].[sqlite_default_schema].[Meanings] ([ID], [Word_ID], [PoS_ID], [Meaning], [Usage]) VALUES (@ID, @Word_ID, @PoS_ID, @Meaning, @Usage)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Word_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Word_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@PoS_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="PoS_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Meaning" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Usage" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Usage" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [ID], [Word_ID], [PoS_ID], [Meaning], [Usage] FROM [Meanings]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [main].[sqlite_default_schema].[Meanings] SET [ID] = @ID, [Word_ID] = @Word_ID, [PoS_ID] = @PoS_ID, [Meaning] = @Meaning, [Usage] = @Usage WHERE (([ID] = @Original_ID) AND ([Word_ID] = @Original_Word_ID) AND ([PoS_ID] = @Original_PoS_ID) AND ([Meaning] = @Original_Meaning) AND ((@IsNull_Usage = 1 AND [Usage] IS NULL) OR ([Usage] = @Original_Usage)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Word_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Word_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@PoS_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="PoS_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Meaning" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Usage" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Usage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Word_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Word_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_PoS_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="PoS_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Meaning" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Meaning" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Usage" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Usage" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Usage" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Usage" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Word_ID" DataSetColumn="Word_ID" />
              <Mapping SourceColumn="PoS_ID" DataSetColumn="PoS_ID" />
              <Mapping SourceColumn="Meaning" DataSetColumn="Meaning" />
              <Mapping SourceColumn="Usage" DataSetColumn="Usage" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PoSTableAdapter" GeneratorDataComponentClassName="PoSTableAdapter" Name="PoS" UserDataComponentName="PoSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MainDBConnectionString (Settings)" DbObjectName="main.PoS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [main].[sqlite_default_schema].[PoS] WHERE (([ID] = @Original_ID) AND ([PoS] = @Original_PoS))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PoS" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="PoS" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [main].[sqlite_default_schema].[PoS] ([ID], [PoS]) VALUES (@ID, @PoS)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PoS" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="PoS" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [ID], [PoS] FROM [PoS]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [main].[sqlite_default_schema].[PoS] SET [ID] = @ID, [PoS] = @PoS WHERE (([ID] = @Original_ID) AND ([PoS] = @Original_PoS))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PoS" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="PoS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PoS" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="PoS" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="PoS" DataSetColumn="PoS" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SynonymsTableAdapter" GeneratorDataComponentClassName="SynonymsTableAdapter" Name="Synonyms" UserDataComponentName="SynonymsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MainDBConnectionString (Settings)" DbObjectName="main.Synonyms" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [main].[sqlite_default_schema].[Synonyms] WHERE (([ID] = @Original_ID) AND ((@IsNull_Synonym = 1 AND [Synonym] IS NULL) OR ([Synonym] = @Original_Synonym)) AND ((@IsNull_Meaning_ID = 1 AND [Meaning_ID] IS NULL) OR ([Meaning_ID] = @Original_Meaning_ID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Synonym" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Synonym" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Synonym" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Synonym" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Meaning_ID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Meaning_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [main].[sqlite_default_schema].[Synonyms] ([ID], [Synonym], [Meaning_ID]) VALUES (@ID, @Synonym, @Meaning_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Synonym" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Synonym" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Meaning_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [ID], [Synonym], [Meaning_ID] FROM [Synonyms]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [main].[sqlite_default_schema].[Synonyms] SET [ID] = @ID, [Synonym] = @Synonym, [Meaning_ID] = @Meaning_ID WHERE (([ID] = @Original_ID) AND ((@IsNull_Synonym = 1 AND [Synonym] IS NULL) OR ([Synonym] = @Original_Synonym)) AND ((@IsNull_Meaning_ID = 1 AND [Meaning_ID] IS NULL) OR ([Meaning_ID] = @Original_Meaning_ID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Synonym" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Synonym" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Meaning_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Synonym" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Synonym" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Synonym" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Synonym" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Meaning_ID" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Meaning_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="Meaning_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Synonym" DataSetColumn="Synonym" />
              <Mapping SourceColumn="Meaning_ID" DataSetColumn="Meaning_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WordsTableAdapter" GeneratorDataComponentClassName="WordsTableAdapter" Name="Words" UserDataComponentName="WordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MainDBConnectionString (Settings)" DbObjectName="main.Words" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [main].[sqlite_default_schema].[Words] WHERE (([ID] = @Original_ID) AND ([Word] = @Original_Word) AND ([Alphabet] = @Original_Alphabet) AND ([Lists] = @Original_Lists))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Word" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Alphabet" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Alphabet" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Lists" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Lists" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [main].[sqlite_default_schema].[Words] ([ID], [Word], [Alphabet], [Lists]) VALUES (@ID, @Word, @Alphabet, @Lists)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Word" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Alphabet" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Alphabet" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Lists" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Lists" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Word, Alphabet, Lists FROM Words</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [main].[sqlite_default_schema].[Words] SET [ID] = @ID, [Word] = @Word, [Alphabet] = @Alphabet, [Lists] = @Lists WHERE (([ID] = @Original_ID) AND ([Word] = @Original_Word) AND ([Alphabet] = @Original_Alphabet) AND ([Lists] = @Original_Lists))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Word" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Alphabet" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Alphabet" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Lists" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Lists" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Word" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Alphabet" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Alphabet" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Lists" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="Lists" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Word" DataSetColumn="Word" />
              <Mapping SourceColumn="Alphabet" DataSetColumn="Alphabet" />
              <Mapping SourceColumn="Lists" DataSetColumn="Lists" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WordListTableAdapter" GeneratorDataComponentClassName="WordListTableAdapter" Name="WordList" UserDataComponentName="WordListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MainDBConnectionString (Settings)" DbObjectName="main.WordList" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [main].[sqlite_default_schema].[WordList] WHERE (([ID] = @Original_ID) AND ([ListName] = @Original_ListName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ListName" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="ListName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [main].[sqlite_default_schema].[WordList] ([ID], [ListName]) VALUES (@ID, @ListName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ListName" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="ListName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [ID], [ListName] FROM [WordList]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [main].[sqlite_default_schema].[WordList] SET [ID] = @ID, [ListName] = @ListName WHERE (([ID] = @Original_ID) AND ([ListName] = @Original_ListName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ListName" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="ListName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int64" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ListName" Precision="0" ProviderType="String" Scale="0" Size="0" SourceColumn="ListName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="ListName" DataSetColumn="ListName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MainDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MainDBDataSet" msprop:Generator_UserDSName="MainDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Antonyms" msprop:Generator_TableClassName="AntonymsDataTable" msprop:Generator_TableVarName="tableAntonyms" msprop:Generator_RowChangedName="AntonymsRowChanged" msprop:Generator_TablePropName="Antonyms" msprop:Generator_RowDeletingName="AntonymsRowDeleting" msprop:Generator_RowChangingName="AntonymsRowChanging" msprop:Generator_RowEvHandlerName="AntonymsRowChangeEventHandler" msprop:Generator_RowDeletedName="AntonymsRowDeleted" msprop:Generator_RowClassName="AntonymsRow" msprop:Generator_UserTableName="Antonyms" msprop:Generator_RowEvArgName="AntonymsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="Antonym" msprop:Generator_ColumnVarNameInTable="columnAntonym" msprop:Generator_ColumnPropNameInRow="Antonym" msprop:Generator_ColumnPropNameInTable="AntonymColumn" msprop:Generator_UserColumnName="Antonym" type="xs:long" />
              <xs:element name="Meaning_ID" msprop:Generator_ColumnVarNameInTable="columnMeaning_ID" msprop:Generator_ColumnPropNameInRow="Meaning_ID" msprop:Generator_ColumnPropNameInTable="Meaning_IDColumn" msprop:Generator_UserColumnName="Meaning_ID" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Meanings" msprop:Generator_TableClassName="MeaningsDataTable" msprop:Generator_TableVarName="tableMeanings" msprop:Generator_RowChangedName="MeaningsRowChanged" msprop:Generator_TablePropName="Meanings" msprop:Generator_RowDeletingName="MeaningsRowDeleting" msprop:Generator_RowChangingName="MeaningsRowChanging" msprop:Generator_RowEvHandlerName="MeaningsRowChangeEventHandler" msprop:Generator_RowDeletedName="MeaningsRowDeleted" msprop:Generator_RowClassName="MeaningsRow" msprop:Generator_UserTableName="Meanings" msprop:Generator_RowEvArgName="MeaningsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="Word_ID" msprop:Generator_ColumnVarNameInTable="columnWord_ID" msprop:Generator_ColumnPropNameInRow="Word_ID" msprop:Generator_ColumnPropNameInTable="Word_IDColumn" msprop:Generator_UserColumnName="Word_ID" type="xs:long" />
              <xs:element name="PoS_ID" msprop:Generator_ColumnVarNameInTable="columnPoS_ID" msprop:Generator_ColumnPropNameInRow="PoS_ID" msprop:Generator_ColumnPropNameInTable="PoS_IDColumn" msprop:Generator_UserColumnName="PoS_ID" type="xs:long" />
              <xs:element name="Meaning" msprop:Generator_ColumnVarNameInTable="columnMeaning" msprop:Generator_ColumnPropNameInRow="Meaning" msprop:Generator_ColumnPropNameInTable="MeaningColumn" msprop:Generator_UserColumnName="Meaning">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Usage" msprop:Generator_ColumnVarNameInTable="columnUsage" msprop:Generator_ColumnPropNameInRow="Usage" msprop:Generator_ColumnPropNameInTable="UsageColumn" msprop:Generator_UserColumnName="Usage" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PoS" msprop:Generator_TableClassName="PoSDataTable" msprop:Generator_TableVarName="tablePoS" msprop:Generator_RowChangedName="PoSRowChanged" msprop:Generator_TablePropName="PoS" msprop:Generator_RowDeletingName="PoSRowDeleting" msprop:Generator_RowChangingName="PoSRowChanging" msprop:Generator_RowEvHandlerName="PoSRowChangeEventHandler" msprop:Generator_RowDeletedName="PoSRowDeleted" msprop:Generator_RowClassName="PoSRow" msprop:Generator_UserTableName="PoS" msprop:Generator_RowEvArgName="PoSRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="PoS" msprop:Generator_ColumnVarNameInTable="columnPoS" msprop:Generator_ColumnPropNameInRow="PoS" msprop:Generator_ColumnPropNameInTable="PoSColumn" msprop:Generator_UserColumnName="PoS">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Synonyms" msprop:Generator_TableClassName="SynonymsDataTable" msprop:Generator_TableVarName="tableSynonyms" msprop:Generator_RowChangedName="SynonymsRowChanged" msprop:Generator_TablePropName="Synonyms" msprop:Generator_RowDeletingName="SynonymsRowDeleting" msprop:Generator_RowChangingName="SynonymsRowChanging" msprop:Generator_RowEvHandlerName="SynonymsRowChangeEventHandler" msprop:Generator_RowDeletedName="SynonymsRowDeleted" msprop:Generator_RowClassName="SynonymsRow" msprop:Generator_UserTableName="Synonyms" msprop:Generator_RowEvArgName="SynonymsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="Synonym" msprop:Generator_ColumnVarNameInTable="columnSynonym" msprop:Generator_ColumnPropNameInRow="Synonym" msprop:Generator_ColumnPropNameInTable="SynonymColumn" msprop:Generator_UserColumnName="Synonym" type="xs:long" minOccurs="0" />
              <xs:element name="Meaning_ID" msprop:Generator_ColumnVarNameInTable="columnMeaning_ID" msprop:Generator_ColumnPropNameInRow="Meaning_ID" msprop:Generator_ColumnPropNameInTable="Meaning_IDColumn" msprop:Generator_UserColumnName="Meaning_ID" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Words" msprop:Generator_TableClassName="WordsDataTable" msprop:Generator_TableVarName="tableWords" msprop:Generator_RowChangedName="WordsRowChanged" msprop:Generator_TablePropName="Words" msprop:Generator_RowDeletingName="WordsRowDeleting" msprop:Generator_RowChangingName="WordsRowChanging" msprop:Generator_RowEvHandlerName="WordsRowChangeEventHandler" msprop:Generator_RowDeletedName="WordsRowDeleted" msprop:Generator_RowClassName="WordsRow" msprop:Generator_UserTableName="Words" msprop:Generator_RowEvArgName="WordsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="Word" msprop:Generator_ColumnVarNameInTable="columnWord" msprop:Generator_ColumnPropNameInRow="Word" msprop:Generator_ColumnPropNameInTable="WordColumn" msprop:Generator_UserColumnName="Word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Alphabet" msprop:Generator_ColumnVarNameInTable="columnAlphabet" msprop:Generator_ColumnPropNameInRow="Alphabet" msprop:Generator_ColumnPropNameInTable="AlphabetColumn" msprop:Generator_UserColumnName="Alphabet">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Lists" msprop:Generator_ColumnVarNameInTable="columnLists" msprop:Generator_ColumnPropNameInRow="Lists" msprop:Generator_ColumnPropNameInTable="ListsColumn" msprop:Generator_UserColumnName="Lists">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WordList" msprop:Generator_TableClassName="WordListDataTable" msprop:Generator_TableVarName="tableWordList" msprop:Generator_TablePropName="WordList" msprop:Generator_RowDeletingName="WordListRowDeleting" msprop:Generator_RowChangingName="WordListRowChanging" msprop:Generator_RowEvHandlerName="WordListRowChangeEventHandler" msprop:Generator_RowDeletedName="WordListRowDeleted" msprop:Generator_UserTableName="WordList" msprop:Generator_RowChangedName="WordListRowChanged" msprop:Generator_RowEvArgName="WordListRowChangeEvent" msprop:Generator_RowClassName="WordListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="ListName" msprop:Generator_ColumnVarNameInTable="columnListName" msprop:Generator_ColumnPropNameInRow="ListName" msprop:Generator_ColumnPropNameInTable="ListNameColumn" msprop:Generator_UserColumnName="ListName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Antonyms" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Meanings_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Meanings" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="PoS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PoS" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Synonyms_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Synonyms" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Words_Constraint1" msdata:ConstraintName="Constraint1">
      <xs:selector xpath=".//mstns:Words" />
      <xs:field xpath="mstns:Word" />
    </xs:unique>
    <xs:unique name="Constraint2" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Words" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="WordList_Constraint1" msdata:ConstraintName="Constraint1">
      <xs:selector xpath=".//mstns:WordList" />
      <xs:field xpath="mstns:ListName" />
    </xs:unique>
    <xs:unique name="WordList_Constraint2" msdata:ConstraintName="Constraint2" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WordList" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Antonyms_0_0" msdata:parent="Meanings" msdata:child="Antonyms" msdata:parentkey="ID" msdata:childkey="Meaning_ID" msprop:Generator_UserChildTable="Antonyms" msprop:Generator_ChildPropName="GetAntonymsRows" msprop:Generator_UserRelationName="FK_Antonyms_0_0" msprop:Generator_ParentPropName="MeaningsRow" msprop:Generator_RelationVarName="relationFK_Antonyms_0_0" msprop:Generator_UserParentTable="Meanings" />
      <msdata:Relationship name="FK_Meanings_0_0" msdata:parent="PoS" msdata:child="Meanings" msdata:parentkey="ID" msdata:childkey="PoS_ID" msprop:Generator_UserChildTable="Meanings" msprop:Generator_ChildPropName="GetMeaningsRows" msprop:Generator_UserRelationName="FK_Meanings_0_0" msprop:Generator_ParentPropName="PoSRow" msprop:Generator_RelationVarName="relationFK_Meanings_0_0" msprop:Generator_UserParentTable="PoS" />
      <msdata:Relationship name="FK_Meanings_1_0" msdata:parent="Words" msdata:child="Meanings" msdata:parentkey="ID" msdata:childkey="Word_ID" msprop:Generator_UserChildTable="Meanings" msprop:Generator_ChildPropName="GetMeaningsRows" msprop:Generator_UserRelationName="FK_Meanings_1_0" msprop:Generator_ParentPropName="WordsRow" msprop:Generator_RelationVarName="relationFK_Meanings_1_0" msprop:Generator_UserParentTable="Words" />
      <msdata:Relationship name="FK_Synonyms_0_0" msdata:parent="Meanings" msdata:child="Synonyms" msdata:parentkey="ID" msdata:childkey="Meaning_ID" msprop:Generator_UserChildTable="Synonyms" msprop:Generator_ChildPropName="GetSynonymsRows" msprop:Generator_UserRelationName="FK_Synonyms_0_0" msprop:Generator_RelationVarName="relationFK_Synonyms_0_0" msprop:Generator_UserParentTable="Meanings" msprop:Generator_ParentPropName="MeaningsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>